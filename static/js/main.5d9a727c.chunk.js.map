{"version":3,"sources":["styles/bg.svg","sizes.js","styles/ColorBoxStyles.js","Colorbox.js","styles/NavbarStyles.js","Navbar.js","PaletteFooter.js","styles/PaletteFooterStyles.js","styles/PaletteStyles.js","Palette.js","MiniPalette.js","styles/MiniPaletteStyles.js","styles/PaletteListStyles.js","PaletteList.js","SingleColorPalette.js","seedColors.js","PaletteMetaForum.js","styles/PaletteFormNavStyles.js","constants.js","PaletteFormNav.js","styles/ColorPickerFormStyles.js","ColorPickerForm.js","styles/DraggableColorBoxStyles.js","DraggableColorbox.js","DraggableColorList.js","styles/NewPaletteFormStyles.js","NewPaletteForm.js","Page.js","colorHelpers.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","sizes","size","concat","xs","sm","md","lg","xl","ColorBoxStyles","ColorBox","_ColorBox","width","height","props","showingFullPalette","margin","display","position","marginBottom","&:hover button","opacity","Object","defineProperty","copyText","color","chroma","background","luminance","colorName","seeMore","border","right","bottom","textAlign","lineHeight","textTransform","copyButton","top","left","marginLeft","marginTop","outline","fontSize","cursor","textDecoration","boxContent","padding","letterSpacing","copyOverlay","zIndex","transition","transform","showOverlay","copyMsg","alignItems","justifyContent","flexDirection","& h1","fontWeight","& p","showMessage","withStyles","styles","name","moreUrl","classes","_useState","useState","_useState2","slicedToArray","copied","setCopied","react_default","a","createElement","lib_default","text","onCopy","setTimeout","style","className","classNames","Link","to","onClick","e","stopPropagation","NavbarStyles","Navbar","logo","backgroundColor","fontFamily","& a","slider","& .rc-slider-track","& .rc-slider-rail","& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:focus, .rc-slider-handle:hover","boxShadow","selectContainer","marginRight","colorLevel","changeLevel","handleFormatChange","showingAllColors","colorFormat","setColorFormat","_useState3","_useState4","isOpen","setIsOpen","closeSnackbar","es","defaultValue","min","max","step","onAfterChange","Select_default","value","onChange","target","MenuItem_default","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","id","toUpperCase","ContentProps","aria-describedby","onClose","action","IconButton_default","key","aria-label","Close_default","paletteFooter","emoji","paletteName","PaletteStyles","palette","paletteColors","goBack","_goBack","_props$palette","colors","setColorLevel","format","setFormat","colorBoxes","map","src_Colorbox","paletteId","src_Navbar","newLevel","val","src_PaletteFooter","MiniPalette","memo","_ref","openDialog","goToPalette","miniColorBoxes","miniColor","root","DeleteOutlined_default","deleteIcon","title","prevProps","nextProps","borderRadius","overflow","&:hover svg","paddingTop","delete","PaletteListStyles","@global",".fade-exit",".fade-exit-active","backgroundImage","bg","overflowX","overflowY","heading","container","_container","flexWrap","nav","palettes","_palettes","boxSizing","gridTemplateColumns","gridGap","deletePalette","history","openDeleteDialog","setOpenDeleteDialog","idToDelete","setIdToDelete","push","closeDialog","react_transition_group","timeout","src_MiniPalette","assign","Dialog_default","aria-labelledby","DialogTitle_default","List_default","ListItem_default","button","ListItemAvatar_default","Avatar_default","red","Check_default","ListItemText_default","blue","colorToFilterBy","shades","allColors","filter","slice","gatherShades","colorId","seedColors","PaletteMetaForum","_React$useState","React","_React$useState2","stage","setStage","newPaletteName","handleSubmit","handlePaletteChange","hideForm","useEffect","ValidatorForm","addValidationRule","every","toLowerCase","dist_es","onSelect","paletteInfoContent","native","react_material_ui_form_validator_lib","onSubmit","DialogContent_default","DialogContentText_default","label","fullWidth","validators","errorMessages","DialogActions_default","Button_default","variant","type","defaultProps","theme","appBar","transitions","create","easing","sharp","duration","leavingScreen","hide","appBarShift","easeOut","enteringScreen","menuButton","navBtns","withTheme","setNewPaletteName","handleDrawerOpen","formShowing","setFormShowing","CssBaseline_default","AppBar_default","Toolbar_default","disableGutters","AddToPhotos_default","Typography_default","noWrap","src_PaletteMetaForum","picker","addColor","colorNameInput","setSelectedCustomColor","selectedCustomColors","maxColors","selectedColor","setColor","newName","setNewName","paletteIsFull","length","_ref2","react_color_es","disableAlpha","newColor","hex","toConsumableArray","instantValidate","placeholder","evt","disabled","_root","&:hover $deleteIcon","&:hover $colorText","colorText","DraggableColorbox","SortableElement","handleClick","SortableContainer","removeColor","i","src_DraggableColorbox","index","drawer","flexShrink","drawerPaper","drawerHeader","objectSpread","mixins","toolbar","content","flexGrow","contentShift","buttons","NewPaletteForm","savePalette","setOpen","_useState5","_useState6","src_PaletteFormNav","newPalette","replace","Drawer_default","anchor","paper","ChevronLeft_default","Divider_default","gutterBottom","rand","newRandColor","flat","isDuplicateColor","Math","floor","random","some","src_ColorPickerForm","src_DraggableColorList","axis","onSortEnd","oldIndex","newIndex","arrayMove","distance","Page","children","levels","generatePalette","starterPalette","_step","_iterator","_createForOfIteratorHelper","s","n","done","level","err","f","_step2","hexColor","numberOfColors","_iterator2","scale","darken","getRange","mode","reverse","rgb","css","rgba","App","savedPalettes","JSON","parse","window","localStorage","getItem","setPalettes","setItem","stringify","findPalette","find","Route","render","location","Switch","path","routeProps","src_Page","src_NewPaletteForm","exact","src_SingleColorPalette","match","params","src_PaletteList","src_Palette","Boolean","hostname","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d9a727c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.396ec969.svg\";","export default {\r\n    down(size) {\r\n        const sizes = {\r\n            xs: '575.98px',\r\n            sm: '767.98px',\r\n            md: '991.98px',\r\n            lg: '1199.98px',\r\n            xl: '1600px'\r\n        };\r\n        return `@media (max-width:${sizes[size]})`;\r\n    }\r\n};","import chroma from \"chroma-js\";\r\nimport sizes from \"../sizes\";\r\n\r\nexport default {\r\n    ColorBox: {\r\n        width: \"20%\",\r\n        height: props => props.showingFullPalette ? \"25%\": \"50%\",\r\n        margin: \"0 auto\",\r\n        display: \"inline-block\",\r\n        position: \"relative\",\r\n        marginBottom: \"-5px\",\r\n        \"&:hover button\": {\r\n            opacity: \"1\"\r\n        },\r\n        [sizes.down(\"lg\")]: {\r\n            width: \"25%\",\r\n            height: props => (props.showingFullPalette ? \"20%\" : \"33.333%\"),\r\n        },\r\n        [sizes.down(\"md\")]: {\r\n            width: \"50%\",\r\n            height: props => (props.showingFullPalette ? \"10%\" : \"20%\"),\r\n        },\r\n        [sizes.down(\"xs\")]: {\r\n            width: \"100%\",\r\n            height: props => (props.showingFullPalette ? \"5%\" : \"10%\"),\r\n        },\r\n    },\r\n    copyText: {\r\n        color: props =>\r\n            chroma(props.background).luminance() >= 0.59 ? \"black\": \"white\"\r\n    },\r\n    colorName: {\r\n        color: props =>\r\n            chroma(props.background).luminance() <= 0.116 ? \"white\": \"black\"\r\n    },\r\n    seeMore: {\r\n        color: props =>\r\n            chroma(props.background).luminance() >= 0.59 ? \"black\": \"white\",\r\n        background: \"rgba(255,255,255,0.3)\",\r\n        position: \"absolute\",\r\n        border: \"none\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        width: \"60px\",\r\n        height: \"30px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"30px\",\r\n        textTransform: \"uppercase\"\r\n    },\r\n    copyButton: {\r\n        color: props =>\r\n            chroma(props.background).luminance() >= 0.59 ? \"black\": \"white\",\r\n        width: \"100px\",\r\n        height: \"30px\",\r\n        position: \"absolute\",\r\n        display: \"inline-block\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginLeft: \"-50px\",\r\n        marginTop: \"-15px\",\r\n        textAlign: \"center\",\r\n        outline: \"none\",\r\n        background: \"rgba(255,255,255,0.3)\",\r\n        fontSize: \"1rem\",\r\n        lineHeight: \"30px\",\r\n        textTransform: \"uppercase\",\r\n        border: \"none\",\r\n        cursor: \"pointer\",\r\n        textDecoration: \"none\",\r\n        opacity: \"0\"\r\n    },\r\n    boxContent: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        left: \"0px\",\r\n        bottom: \"0px\",\r\n        padding: \"10px\",\r\n        color: \"black\",\r\n        letterSpacing: \"1px\",\r\n        textTransform: \"uppercase\",\r\n        fontSize: \"12px\"\r\n    },\r\n    copyOverlay: {\r\n        opacity: \"0\",\r\n        zIndex: \"0\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        transition: \"transform 0.5s ease-in-out\",\r\n        transform: \"scale(0.1)\"\r\n    },\r\n    showOverlay: {\r\n        opacity: \"1\",\r\n        transform: \"scale(50)\",\r\n        zIndex: \"10\",\r\n        position: \"absolute\",\r\n    },\r\n    copyMsg: {\r\n        position: \"fixed\",\r\n        left: \"0\",\r\n        right: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        fontSize: \"3rem\",\r\n        transform: \"scale(0.1)\",\r\n        opacity: \"0\",\r\n        color: \"white\",\r\n        \"& h1\": {\r\n            fontWeight: \"400\",\r\n            background: \"rgba(255,255,255,0.2)\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            marginBottom: \"0\",\r\n            padding: \"1rem\",\r\n            textTransform: \"uppercase\",\r\n            [sizes.down(\"xs\")]: {\r\n                fontSize: \"6rem\",\r\n            },\r\n        },\r\n        \"& p\": {\r\n            fontSize: \"2rem\",\r\n            fontWeight: \"100\"\r\n        }\r\n    },\r\n    showMessage: {\r\n        opacity: \"1\",\r\n        transform: \"scale(1)\",\r\n        zIndex: \"25\",\r\n        transition: \"all 0.4s ease-in-out\"\r\n    }\r\n};","import React, { useState } from 'react';\nimport CopytoClipboard from 'react-copy-to-clipboard';\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport styles from \"./styles/ColorBoxStyles\"\n\n\nfunction Colorbox(props) {\n    const { name, background, showingFullPalette, moreUrl, classes } = props\n    const [copied, setCopied] = useState(false);\n\n    function changeCopyState() {\n        setCopied(true)\n        setTimeout(() => setCopied(false), 1000);\n    }\n\n    return (\n        <CopytoClipboard text={background} onCopy={changeCopyState}>\n            <div style={{ background }} className={classes.ColorBox}>\n                <div style={{ background }}\n                     className={classNames(classes.copyOverlay, { [classes.showOverlay]: copied })}/>\n                <div className={classNames(classes.copyMsg, { [classes.showMessage]: copied })}>\n                    <h1>Copied!</h1>\n                    <p className={classes.copyText}>{background}</p>\n                </div>\n                <div>\n                    <div className={classes.boxContent}>\n                        <span className={classes.colorName}>\n                            {name}\n                        </span>\n                    </div>\n                    <button className={classes.copyButton}>Copy</button>\n                </div>\n                {showingFullPalette && (\n                    <Link to={moreUrl} onClick={e => e.stopPropagation()}>\n                        <span className={classes.seeMore}>MORE</span>\n                    </Link>\n                )}\n            </div>\n        </CopytoClipboard>\n    );\n}\n\nexport default withStyles(styles)(Colorbox);\n","import sizes from \"../sizes\";\r\n\r\nexport default {\r\n    Navbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        height: \"6vh\"\r\n    },\r\n    logo: {\r\n        margin: \"10px\",\r\n        padding: \"0 10px\",\r\n        fontSize: \"22px\",\r\n        backgroundColor: \"#eceff1\",\r\n        fontFamily: \"Roboto\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        \"& a\": {\r\n            textDecoration: \"none\",\r\n            color: \"black\"\r\n        },\r\n        [sizes.down(\"xs\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    slider: {\r\n        width: \"350px\",\r\n        margin: \"0 10px\",\r\n        display: \"inline-block\",\r\n        \"& .rc-slider-track\": {\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        \"& .rc-slider-rail\": {\r\n            height: \"8px\",\r\n            backgroundColor: \"#ffd29d\"\r\n        },\r\n        \"& .rc-slider-handle, .rc-slider-handle:active, .rc-slider-handle:focus, .rc-slider-handle:hover\": {\r\n            backgroundColor: \"dimgray\",\r\n            outline: \"none\",\r\n            border: \"2px solid gray\",\r\n            boxShadow: \"none\",\r\n            width: \"13px\",\r\n            height: \"13px\",\r\n            marginLeft: \"-7px\",\r\n            marginTop: \"-3px\",\r\n        },\r\n        [sizes.down(\"sm\")]: {\r\n            width: \"150px\",\r\n        },\r\n    },\r\n    selectContainer: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"1rem\"\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Slider from \"rc-slider\";\r\nimport styles from \"./styles/NavbarStyles\";\r\nimport 'rc-slider/assets/index.css';\r\n\r\nfunction Navbar(props) {\r\n    const {colorLevel, changeLevel, handleFormatChange, showingAllColors, classes} = props\r\n    const [colorFormat, setColorFormat] = useState(\"hex\");\r\n    const [isOpen, setIsOpen] = useState( false );\r\n\r\n    // close format change popup notification\r\n    function closeSnackbar(){\r\n        setIsOpen( false );\r\n    }\r\n\r\n    // Handle selection changes from hex, rgb, rgba\r\n    function handleChange(e) {\r\n        setColorFormat(e.target.value)\r\n        setIsOpen(true)\r\n        handleFormatChange(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <header className={classes.Navbar}>\r\n            <div className={classes.logo}>\r\n                <Link to='/'>ColorShot</Link>\r\n            </div>\r\n\r\n            {/* Dont show brightness slider if on single color page */}\r\n            {showingAllColors && (\r\n            <div>\r\n                <span>Level: {colorLevel}</span>\r\n                <div className={classes.slider}>\r\n                    <Slider defaultValue={colorLevel} min={100} max={900} step={100} onAfterChange={changeLevel}/>\r\n                </div>\r\n            </div>\r\n            )}\r\n\r\n            <div className={classes.selectContainer}>\r\n                <Select value={colorFormat} onChange={handleChange}>\r\n                    <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\r\n                    <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\r\n                    <MenuItem value=\"rgba\">RGBA - rgba(255,255,255, 1.0)</MenuItem>\r\n                </Select>\r\n            </div>\r\n\r\n            <Snackbar anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\r\n                      open={isOpen}\r\n                      autoHideDuration={3000}\r\n                      message={<span id='message-id'>Format changed to {colorFormat.toUpperCase()}.</span>}\r\n                      ContentProps={{\"aria-describedby\": \"message-id\"}}\r\n                      onClose={closeSnackbar}\r\n                      action={[\r\n                          <IconButton onClick={closeSnackbar} color=\"inherit\" key=\"close\" aria-label=\"close\">\r\n                              <CloseIcon />\r\n                          </IconButton>\r\n                      ]}\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"./styles/PaletteFooterStyles\"\r\n\r\nfunction PaletteFooter(props) {\r\n    const {paletteName, emoji, classes} = props;\r\nreturn(\r\n    <footer className={classes.paletteFooter}>\r\n        { paletteName }\r\n        <span className={classes.emoji}>{emoji}</span>\r\n    </footer>\r\n)\r\n}\r\n\r\nexport default withStyles(styles)(PaletteFooter);","export default {\r\n    paletteFooter: {\r\n        backgroundColor: \"white\",\r\n        height: \"5vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center;font-weight: bold\"\r\n    },\r\n    emoji: {\r\n        fontSize: \"1.5rem\",\r\n        margin: \"0 1rem\"\r\n    }\r\n}","import sizes from \"../sizes\";\r\n\r\nexport default {\r\n    palette: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    paletteColors: {\r\n        height: \"90%\"\r\n    },\r\n    goBack: {\r\n        width: \"20%\",\r\n        height: \"50%\",\r\n        margin: \"0 auto\",\r\n        display: \"inline-block\",\r\n        position: \"relative\",\r\n        marginBottom: \"-4px\",\r\n        opacity: \"1\",\r\n        backgroundColor: \"black\",\r\n        \"& a\": {\r\n            color: \"white\",\r\n            width: \"100px\",\r\n            height: \"30px\",\r\n            position: \"absolute\",\r\n            display: \"inline-block\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            marginLeft: \"-50px\",\r\n            marginTop: \"-15px\",\r\n            textAlign: \"center\",\r\n            outline: \"none\",\r\n            background: \"rgba(255,255,255,0.3)\",\r\n            fontSize: \"1rem\",\r\n            lineHeight: \"30px\",\r\n            textTransform: \"uppercase\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n            textDecoration: \"none\",\r\n        },\r\n        [sizes.down(\"lg\")]: {\r\n            width: \"25%\",\r\n            height: \"33.333%\",\r\n        },\r\n        [sizes.down(\"md\")]: {\r\n            width: \"50%\",\r\n            height: \"20%\",\r\n        },\r\n        [sizes.down(\"xs\")]: {\r\n            width: \"100%\",\r\n            height: \"10%\",\r\n        },\r\n    }\r\n};","import React, {useState} from 'react';\nimport Colorbox from \"./Colorbox\";\nimport Navbar from \"./Navbar\";\nimport PaletteFooter from \"./PaletteFooter\";\nimport styles from \"./styles/PaletteStyles\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nfunction Palette(props) {\n\n    const { paletteName, emoji, colors, id } = props.palette;\n    const { classes } = props;\n\n    // State of color level\n    const [colorLevel, setColorLevel] = useState(500);\n    const [format, setFormat] = useState(\"hex\");\n\n    // Used by slider to change the color brightness level\n    function changeLevel(newLevel) {\n        setColorLevel(newLevel);\n    };\n\n    // Change the color display format, HEX, RGB, RGBA\n    function changeColorFormat(val) {\n        setFormat(val)\n    }\n\n    // Sets the background color for each box\n    const colorBoxes = colors[colorLevel].map(color => (\n        <Colorbox\n            key={color.id}\n            background={color[format]}\n            name={color.name}\n            id={color.id}\n            paletteId={id}\n            moreUrl={`/palette/${id}/${color.id}`}\n            showingFullPalette=\"{true}\"\n        />\n        )\n    );\n\n    return (\n        <div className={classes.palette}>\n            {/*navbar*/}\n            <Navbar colorLevel={colorLevel}\n                    changeLevel={changeLevel}\n                    handleFormatChange={changeColorFormat}\n                    showingAllColors\n            />\n            <div className={classes.paletteColors}>\n            {/*color boxes*/}\n                { colorBoxes }\n            </div>\n        {/*    footer */}\n            <PaletteFooter paletteName={paletteName} emoji={emoji}/>\n        </div>\n    );\n};\n\nexport default withStyles(styles)(Palette);","import React, { memo } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"./styles/MiniPaletteStyles\";\r\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\r\n\r\nconst MiniPalette = memo(({classes, paletteName, emoji, colors, openDialog, goToPalette, id}) => {\r\n\r\n    const miniColorBoxes = (colors.map(color => (\r\n        <div\r\n            className={classes.miniColor}\r\n            style={{ backgroundColor: color.color }}\r\n            key={color.name}\r\n        />\r\n    )));\r\n\r\n    const removePalette = (e) => {\r\n        e.stopPropagation();\r\n        openDialog(id)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        goToPalette(id)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} onClick={handleClick}>\r\n            <DeleteOutlinedIcon\r\n                className={classes.deleteIcon}\r\n                style={{ transition: \"all 0.3s ease-in-out\" }}\r\n                onClick={removePalette}\r\n            />\r\n            <div className={classes.colors}>{miniColorBoxes}</div>\r\n            <h5 className={classes.title}>\r\n                {paletteName} <span className={classes.emoji}>{emoji}</span>\r\n            </h5>\r\n        </div>\r\n    );\r\n}, (prevProps, nextProps) => {\r\n    return prevProps.openDialog !== nextProps.openDialog;\r\n});\r\n\r\nexport default withStyles(styles)(MiniPalette);","export default {\r\n    root: {\r\n        backgroundColor: \"white\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"5px\",\r\n        padding: \"0.5rem\",\r\n        position: \"relative\",\r\n        overflow: \"hidden\",\r\n        cursor: \"pointer\",\r\n        \"&:hover svg\": {\r\n            opacity: 1\r\n        }\r\n    },\r\n    colors: {\r\n        backgroundColor: \"#dae1e4\",\r\n        height: \"150px\",\r\n        width: \"100%\",\r\n        borderRadius: \"5px\",\r\n        overflow: \"hidden\"\r\n    },\r\n    title: {\r\n        display: \"flex:\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        margin: \"0\",\r\n        color: \"black\",\r\n        paddingTop: \"0.5rem\",\r\n        fontSize: \"1rem\",\r\n        position: \"relative\"\r\n    },\r\n    emoji: {\r\n        marginLeft: \"0.5rem\",\r\n        fontSize: \"1.5rem\"\r\n    },\r\n    miniColor: {\r\n        height: \"25%\",\r\n        width: \"20%\",\r\n        display: \"inline-block\",\r\n        margin: \"auto\",\r\n        position: \"relative\",\r\n        marginBottom: \"-4px\"\r\n    },\r\n    delete: {\r\n\r\n    },\r\n    deleteIcon: {\r\n        color: \"white\",\r\n        backgroundColor: \"#ed3d30\",\r\n        width: \"20px\",\r\n        height: \"20px\",\r\n        position: \"absolute\",\r\n        right: \"0px\",\r\n        top: \"0px\",\r\n        padding: \"10px\",\r\n        zIndex: 10,\r\n        opacity: 0\r\n    }\r\n};","import sizes from \"../sizes\";\r\nimport bg from \"./bg.svg\";\r\n\r\nexport default {\r\n    \"@global\":{\r\n        \".fade-exit\": {\r\n            opacity: 1\r\n        },\r\n        \".fade-exit-active\": {\r\n            opacity: 0,\r\n            transition: \"opacity 300ms ease-out\"\r\n        }\r\n    },\r\n    root: {\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\",\r\n        justifyContent: \"center\",\r\n        /* background by SVGBackgrounds.com */\r\n        backgroundColor: \"#28d8ff\",\r\n        backgroundImage: `url(${bg})`,\r\n        overflowX: \"auto\",\r\n        overflowY: \"auto\"\r\n},\r\n    heading: {\r\n        fontSize: \"2rem\"\r\n    },\r\n    container: {\r\n        width: \"50%\",\r\n        display: \"flex\",\r\n        alignItems: \"flex-start\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        [sizes.down(\"xl\")]: {\r\n            width: \"80%\",\r\n        },\r\n        [sizes.down(\"xs\")]: {\r\n            width: \"75%\",\r\n        },\r\n    },\r\n    nav: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        color: \"white\",\r\n        \"& a\": {\r\n            color: \"white\"\r\n        }\r\n    },\r\n    palettes: {\r\n        boxSizing: \"border-box\",\r\n        width: \"100%\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(3, 30%)\",\r\n        gridGap: \"1.5rem\",\r\n        [sizes.down(\"xl\")]: {\r\n            gridTemplateColumns: \"repeat(3, 25%)\",\r\n        },\r\n        [sizes.down(\"md\")]: {\r\n            gridTemplateColumns: \"repeat(2, 50%)\",\r\n        },\r\n        [sizes.down(\"xs\")]: {\r\n            gridGap: \"1.4rem\",\r\n            gridTemplateColumns: \"repeat(1, 100%)\",\r\n        },\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MiniPalette from \"./MiniPalette\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport blue from '@material-ui/core/colors/blue'\r\nimport red from '@material-ui/core/colors/red'\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport styles from \"./styles/PaletteListStyles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nfunction PaletteList(props) {\r\n\r\n    const { palettes, classes, deletePalette, history } = props;\r\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n    const [idToDelete, setIdToDelete] = useState(\"\");\r\n\r\n    const goToPalette = (id) => {\r\n        history.push(`/palette/${id}`);\r\n    };\r\n\r\n    const openDialog = (id) => {\r\n        setOpenDeleteDialog(true);\r\n        setIdToDelete(id);\r\n    };\r\n\r\n    const closeDialog = () => {\r\n        setOpenDeleteDialog(false);\r\n        setIdToDelete(\"\");\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        deletePalette(idToDelete);\r\n        closeDialog();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.container}>\r\n                <nav className={classes.nav}>\r\n                    <h1 className={classes.heading}>Colorshot</h1>\r\n                    <Link to=\"/palette/new\">Create Palette</Link>\r\n                </nav>\r\n                <TransitionGroup className={classes.palettes}>\r\n                    {palettes.map(palette => (\r\n                        <CSSTransition key={palette.id} classNames='fade' timeout={500}>\r\n                            <MiniPalette\r\n                                {...palette}\r\n                                id={palette.id}\r\n                                openDialog={openDialog}\r\n                                key={palette.id}\r\n                                goToPalette={goToPalette}\r\n                            />\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n            </div>\r\n            {/*Pop-up delete confirmation dialog*/}\r\n            <Dialog open={openDeleteDialog} aria-labelledby=\"delete-dialog-title\" onClose={closeDialog}>\r\n                <DialogTitle id=\"delete-dialog-title\"> Are you sure you want to delete?</DialogTitle>\r\n                <List>\r\n                    {/*Confirm palette deletion button*/}\r\n                    <ListItem button onClick={handleDelete}>\r\n                        <ListItemAvatar>\r\n                            <Avatar style={{ backgroundColor: red[100], color: red[600] }}>\r\n                                <CheckIcon/>\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText>Delete</ListItemText>\r\n                    </ListItem>\r\n                    {/*Cancel palette deletion button*/}\r\n                    <ListItem button onClick={closeDialog}>\r\n                        <ListItemAvatar>\r\n                            <Avatar style={{ backgroundColor: blue[100], color: blue[600] }}>\r\n                                <CloseIcon/>\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText>Cancel</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PaletteList);\r\n","import React, {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Colorbox from \"./Colorbox\";\r\nimport Navbar from \"./Navbar\";\r\nimport PaletteFooter from \"./PaletteFooter\";\r\nimport styles from \"./styles/PaletteStyles\";\r\n\r\nfunction SingleColorPalette(props) {\r\n\r\n    const { paletteName, emoji, id } = props.palette;\r\n    const { classes } = props;\r\n    const [format, setFormat] = useState(\"hex\");\r\n    const _shades = gatherShades(props.palette, props.colorId)\r\n\r\n    function gatherShades(palette, colorToFilterBy) {\r\n        let shades = [];\r\n        let allColors = palette.colors;\r\n        //return all shades of color\r\n\r\n        for(let key in allColors){\r\n            shades = shades.concat(\r\n                allColors[key].filter( color => color.id === colorToFilterBy)\r\n            )\r\n        }\r\n\r\n        return shades.slice(1);\r\n    }\r\n\r\n    // Change the color display format, HEX, RGB, RGBA\r\n    function changeColorFormat(val) {\r\n        setFormat(val)\r\n    }\r\n    const colorBoxes = _shades.map(color => (\r\n        <Colorbox\r\n            key={color.name}\r\n            name={color.name}\r\n            background={color[format]}\r\n            showingFullPalette={false}\r\n        />\r\n    ));\r\n    return (\r\n        <div className={classes.palette}>\r\n            <Navbar handleFormatChange={changeColorFormat} showingAllColors={false}/>\r\n            <div className={classes.paletteColors}>\r\n                {colorBoxes}\r\n                <div className={classes.goBack}>\r\n                    <Link to={`/palette/${id}`}>Go Back</Link>\r\n                </div>\r\n            </div>\r\n            <PaletteFooter paletteName={paletteName} emoji={emoji}/>\r\n        </div>\r\n    );\r\n}\r\nexport default withStyles(styles)(SingleColorPalette);","export default [\n  {\n    paletteName: \"Material UI Colors\",\n    id: \"material-ui-colors\",\n    emoji: \"🎨\",\n    colors: [\n      { name: \"red\", color: \"#F44336\" },\n      { name: \"pink\", color: \"#E91E63\" },\n      { name: \"purple\", color: \"#9C27B0\" },\n      { name: \"deeppurple\", color: \"#673AB7\" },\n      { name: \"indigo\", color: \"#3F51B5\" },\n      { name: \"blue\", color: \"#2196F3\" },\n      { name: \"lightblue\", color: \"#03A9F4\" },\n      { name: \"cyan\", color: \"#00BCD4\" },\n      { name: \"teal\", color: \"#009688\" },\n      { name: \"green\", color: \"#4CAF50\" },\n      { name: \"lightgreen\", color: \"#8BC34A\" },\n      { name: \"lime\", color: \"#CDDC39\" },\n      { name: \"yellow\", color: \"#FFEB3B\" },\n      { name: \"amber\", color: \"#FFC107\" },\n      { name: \"orange\", color: \"#FF9800\" },\n      { name: \"deeporange\", color: \"#FF5722\" },\n      { name: \"brown\", color: \"#795548\" },\n      { name: \"grey\", color: \"#9E9E9E\" },\n      { name: \"bluegrey\", color: \"#607D8B\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors v1\",\n    id: \"flat-ui-colors-v1\",\n    emoji: \"🤙\",\n    colors: [\n      { name: \"Turquoise\", color: \"#1abc9c\" },\n      { name: \"Emerald\", color: \"#2ecc71\" },\n      { name: \"PeterRiver\", color: \"#3498db\" },\n      { name: \"Amethyst\", color: \"#9b59b6\" },\n      { name: \"WetAsphalt\", color: \"#34495e\" },\n      { name: \"GreenSea\", color: \"#16a085\" },\n      { name: \"Nephritis\", color: \"#27ae60\" },\n      { name: \"BelizeHole\", color: \"#2980b9\" },\n      { name: \"Wisteria\", color: \"#8e44ad\" },\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\n      { name: \"SunFlower\", color: \"#f1c40f\" },\n      { name: \"Carrot\", color: \"#e67e22\" },\n      { name: \"Alizarin\", color: \"#e74c3c\" },\n      { name: \"Clouds\", color: \"#ecf0f1\" },\n      { name: \"Concrete\", color: \"#95a5a6\" },\n      { name: \"Orange\", color: \"#f39c12\" },\n      { name: \"Pumpkin\", color: \"#d35400\" },\n      { name: \"Pomegranate\", color: \"#c0392b\" },\n      { name: \"Silver\", color: \"#bdc3c7\" },\n      { name: \"Asbestos\", color: \"#7f8c8d\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Dutch\",\n    id: \"flat-ui-colors-dutch\",\n    emoji: \"🇳🇱\",\n    colors: [\n      { name: \"Sunflower\", color: \"#FFC312\" },\n      { name: \"Energos\", color: \"#C4E538\" },\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\n      { name: \"BaraRose\", color: \"#ED4C67\" },\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\n      { name: \"LavenderTea\", color: \"#D980FA\" },\n      { name: \"VerryBerry\", color: \"#B53471\" },\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\n      { name: \"PixelatedGrass\", color: \"#009432\" },\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\n      { name: \"HollyHock\", color: \"#833471\" },\n      { name: \"RedPigment\", color: \"#EA2027\" },\n      { name: \"TurkishAqua\", color: \"#006266\" },\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n      { name: \"MagentaPurple\", color: \"#6F1E51\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors American\",\n    id: \"flat-ui-colors-american\",\n    emoji: \"🇺🇸\",\n    colors: [\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n      { name: \"FadedPoster\", color: \"#81ecec\" },\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\n      { name: \"CityLights\", color: \"#dfe6e9\" },\n      { name: \"MintLeaf\", color: \"#00b894\" },\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\n      { name: \"FirstDate\", color: \"#fab1a0\" },\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\n      { name: \"AmericanRiver\", color: \"#636e72\" },\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n      { name: \"OrangeVille\", color: \"#e17055\" },\n      { name: \"Chi-Gong\", color: \"#d63031\" },\n      { name: \"PrunusAvium\", color: \"#e84393\" },\n      { name: \"DraculaOrchid\", color: \"#2d3436\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Aussie\",\n    id: \"flat-ui-colors-aussie\",\n    emoji: \"🇦🇺\",\n    colors: [\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\n      { name: \"JuneBud\", color: \"#badc58\" },\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n      { name: \"Turbo\", color: \"#f9ca24\" },\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\n      { name: \"PureApple\", color: \"#6ab04c\" },\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\n      { name: \"Heliotrope\", color: \"#e056fd\" },\n      { name: \"ExodusFruit\", color: \"#686de0\" },\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n      { name: \"SteelPink\", color: \"#be2edd\" },\n      { name: \"Blurple\", color: \"#4834d4\" },\n      { name: \"DeepCove\", color: \"#130f40\" },\n      { name: \"WizardGrey\", color: \"#535c68\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors British\",\n    id: \"flat-ui-colors-british\",\n    emoji: \"🇬🇧\",\n    colors: [\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\n      { name: \"Seabrook\", color: \"#487eb0\" },\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\n      { name: \"Naval\", color: \"#40739e\" },\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n      { name: \"MazarineBlue\", color: \"#273c75\" },\n      { name: \"BlueNights\", color: \"#353b48\" },\n      { name: \"HarleyOrange\", color: \"#c23616\" },\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\n      { name: \"ChainGangGrey\", color: \"#718093\" },\n      { name: \"PicoVoid\", color: \"#192a56\" },\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Spanish\",\n    id: \"flat-ui-colors-spanish\",\n    emoji: \"🇪🇸\",\n    colors: [\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\n      { name: \"C64Purple\", color: \"#706fd3\" },\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\n      { name: \"SummerSky\", color: \"#34ace0\" },\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\n      { name: \"Liberty\", color: \"#474787\" },\n      { name: \"HotStone\", color: \"#aaa69d\" },\n      { name: \"DevilBlue\", color: \"#227093\" },\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\n      { name: \"ChileanFire\", color: \"#cd6133\" },\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n      { name: \"Desert\", color: \"#ccae62\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Indian\",\n    id: \"flat-ui-colors-indian\",\n    emoji: \"🇮🇳\",\n    colors: [\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\n      { name: \"RichGardenia\", color: \"#F97F51\" },\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\n      { name: \"Keppel\", color: \"#58B19F\" },\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\n      { name: \"BlueBell\", color: \"#3B3B98\" },\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n      { name: \"OasisStream\", color: \"#9AECDB\" },\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\n      { name: \"PineGlade\", color: \"#BDC581\" },\n      { name: \"HighlighterLavender\", color: \"#82589F\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors French\",\n    id: \"flat-ui-colors-french\",\n    emoji: \"🇫🇷\",\n    colors: [\n      { name: \"FlatFlesh\", color: \"#fad390\" },\n      { name: \"MelonMelody\", color: \"#f8c291\" },\n      { name: \"Livid\", color: \"#6a89cc\" },\n      { name: \"Spray\", color: \"#82ccdd\" },\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\n      { name: \"MandarinRed\", color: \"#e55039\" },\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\n      { name: \"Dupain\", color: \"#60a3bc\" },\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\n      { name: \"Waterfall\", color: \"#38ada9\" },\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\n      { name: \"JalapenoRed\", color: \"#b71540\" },\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\n      { name: \"ReefEncounter\", color: \"#079992\" }\n    ]\n  }\n];\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { Picker } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css'\r\n\r\nconst PaletteMetaForum = props => {\r\n    const [stage, setStage] = React.useState(\"form\")\r\n\r\n\r\n    const { newPaletteName, handleSubmit, handlePaletteChange, hideForm, palettes } = props;\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPaletteNameUnique', value =>\r\n            palettes.every(\r\n                ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\r\n            ));\r\n    });\r\n\r\n    const savePalette = (emoji) => {\r\n        const paletteInfoContent = {\r\n            paletteName: newPaletteName,\r\n            emoji: emoji.native\r\n        };\r\n        handleSubmit(paletteInfoContent)\r\n        setStage(\"\");\r\n    };\r\n\r\n    const showEmojiPicker = () => {\r\n        setStage(\"emoji\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <Dialog open={stage === \"emoji\"} onClose={hideForm}>\r\n            <DialogTitle>\r\n                Pick an emoji for your palette.\r\n            </DialogTitle>\r\n            <Picker title=\"Pick a palette emoji.\" onSelect={savePalette}/>\r\n        </Dialog>\r\n        <Dialog open={stage === \"form\"} onClose={hideForm} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Choose a Palette Name</DialogTitle>\r\n            <ValidatorForm onSubmit={showEmojiPicker}>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please enter a unique name for your new palette.\r\n                    </DialogContentText>\r\n                    <TextValidator\r\n                        label=\"Palette Name\"\r\n                        value={newPaletteName}\r\n                        name=\"newPaletteName\"\r\n                        onChange={handlePaletteChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        validators={[\"required\", \"isPaletteNameUnique\"]}\r\n                        errorMessages={[\"Enter a Palette Name!\", \"Name already used.\"]}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={hideForm} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\">\r\n                        Save Palette\r\n                    </Button>\r\n                </DialogActions>\r\n            </ValidatorForm>\r\n        </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nPaletteMetaForum.propTypes = {};\r\n\r\nPaletteMetaForum.defaultProps = {};\r\n\r\nexport default PaletteMetaForum;","import {DRAWER_WIDTH} from \"../constants\";\r\nimport sizes from \"../sizes\";\r\nconst drawerWidth = DRAWER_WIDTH;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: \"64px\"\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        })\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 20,\r\n    },\r\n    navBtns: {\r\n        marginRight: '1rem',\r\n        \"& a\": {\r\n            textDecoration: \"none\"\r\n        },\r\n        [sizes.down(\"xs\")]: {\r\n            marginRight: 0,\r\n        },\r\n    },\r\n    button: {\r\n        margin: \"0 0.5rem\",\r\n        [sizes.down(\"xs\")]: {\r\n            margin: \"0 0.2rem\",\r\n            padding: \"0.3rem\"\r\n        },\r\n    }\r\n});\r\nexport default styles;","export const DRAWER_WIDTH = 400;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PaletteMetaForum from \"./PaletteMetaForum\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './styles/PaletteFormNavStyles'\r\n\r\nfunction PaletteFormNav(props) {\r\n    const { classes, open, setNewPaletteName, newPaletteName, handleSubmit, handleDrawerOpen, palettes } = props;\r\n\r\n    const [formShowing, setFormShowing] = useState(false);\r\n\r\n    //handles custom palette name changes as you type\r\n    const handlePaletteChange = e => {\r\n        setNewPaletteName(e.target.value)\r\n    };\r\n\r\n    const showForm = () => {\r\n        setFormShowing(true)\r\n    };\r\n\r\n    const hideForm = () => {\r\n        setFormShowing(false)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                color=\"default\"\r\n                className={classNames(classes.appBar, {\r\n                    [classes.appBarShift]: open\r\n                })}\r\n            >\r\n                <Toolbar disableGutters={!open}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"Open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={classNames(classes.menuButton, {\r\n                            [classes.hide]: open\r\n                        })}\r\n                    >\r\n                        <AddToPhotosIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Create A Custom Palette\r\n                    </Typography>\r\n                </Toolbar>\r\n                <div className={classes.navBtns}>\r\n                    <Link to='/'>\r\n                        <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n                            Go Back\r\n                        </Button>\r\n                    </Link>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={showForm} className={classes.button}>\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </AppBar>\r\n            {formShowing && (\r\n                <PaletteMetaForum handleSubmit={handleSubmit} hideForm={hideForm} newPaletteName={newPaletteName}\r\n                                  handlePaletteChange={handlePaletteChange} palettes={palettes}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(PaletteFormNav);","const styles = {\r\n    picker: {\r\n        width: \"100% !important\",\r\n        marginTop: \"2rem\"\r\n    },\r\n    addColor: {\r\n        width: \"100%\",\r\n        padding: \"0.5rem\",\r\n        marginTop: \"0.2rem\",\r\n        fontSize: \"1.5rem\"\r\n    },\r\n    colorNameInput: {\r\n        width: \"100%\",\r\n        height: \"70px\"\r\n    }\r\n};\r\nexport default styles;","import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport {ChromePicker} from 'react-color';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles/ColorPickerFormStyles'\r\n\r\nfunction ColorPickerForm(props) {\r\n\r\n    const { setSelectedCustomColor, selectedCustomColors, maxColors, classes } = props;\r\n\r\n    // STATES\r\n\r\n    // Currently selected color in picker\r\n    const [ selectedColor, setColor ] = useState( '#30BFD6' );\r\n    // Custom name for a new selected color\r\n    const [ newName, setNewName ] = useState(\"\")\r\n\r\n    // Check if there are already 20 colors and palette is full\r\n    const paletteIsFull = selectedCustomColors.length >= maxColors\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isColorUnique', () =>\r\n            selectedCustomColors.every(\r\n                ({ color }) => color !== selectedColor\r\n            ));\r\n        ValidatorForm.addValidationRule('isColorNameUnique', value =>\r\n            selectedCustomColors.every(\r\n                ({ name }) => name.toLowerCase() !== value.toLowerCase()\r\n            ));\r\n    });\r\n\r\n    // Change state for current color selected in colorpicker\r\n    const handleColorChange = (newColor) => {\r\n        setColor(newColor.hex)\r\n    };\r\n\r\n    // Change state for array of custom colors in palette\r\n    const addNewColor = () => {\r\n        const newColor = {color: selectedColor, name: newName}\r\n        setSelectedCustomColor([...selectedCustomColors, newColor]);\r\n        setNewName(\"\");\r\n    };\r\n\r\n    // For User Custom Color Name Changes\r\n    const handleTextChange = (evt) => {\r\n        setNewName(evt.target.value);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            {/*The colorpicker widget*/}\r\n            <ChromePicker\r\n                width='100%'\r\n                disableAlpha={true}\r\n                color={selectedColor}\r\n                onChange={handleColorChange}\r\n                className={classes.picker}\r\n            />\r\n\r\n            {/* Color name form with validation*/}\r\n            <ValidatorForm onSubmit={addNewColor} instantValidate={false}>\r\n                <TextValidator\r\n                    value={newName}\r\n                    className={classes.colorNameInput}\r\n                    placeholder='Color Name'\r\n                    name='newColorName'\r\n                    variant=\"filled\"\r\n                    margin='normal'\r\n                    onChange={handleTextChange}\r\n                    validators={[\"required\", \"isColorNameUnique\", \"isColorUnique\"]}\r\n                    errorMessages={[\"You can't leave that poor color nameless!\", \"You already used that name chief. Try another one.\", \"Hey! That color's already in here!\"]}\r\n                />\r\n\r\n                {/*Add-color-to-palette button*/}\r\n                <Button\r\n                    variant='contained'\r\n                    type='submit'\r\n                    color='primary'\r\n                    disabled={paletteIsFull}\r\n                    className={classes.addColor}\r\n                    style={{backgroundColor: paletteIsFull? \"grey\" : selectedColor}}\r\n                >\r\n                    {paletteIsFull ? \"Palette Full\" : \"Add Color\"}\r\n                </Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(ColorPickerForm);","import sizes from \"../sizes\";\r\nimport chroma from \"chroma-js\";\r\n\r\nconst styles = {\r\n    root: {\r\n        width: \"20%\",\r\n        height: \"25%\",\r\n        margin: \"0 auto\",\r\n        display: \"inline-block\",\r\n        position: \"relative\",\r\n        marginBottom: \"-4px\",\r\n        \"&:hover $deleteIcon\": {\r\n            color: \"white\",\r\n            transform: \"scale(1.5)\",\r\n        },\r\n        \"&:hover $colorText\": {\r\n            transform: \"scale(1.1)\",\r\n        },\r\n        [sizes.down(\"lg\")]: {\r\n            width: \"25%\",\r\n            height: \"20%\"\r\n        },\r\n        [sizes.down(\"md\")]: {\r\n            width: \"50%\",\r\n            height: \"10%\"\r\n        },\r\n        [sizes.down(\"md\")]: {\r\n            width: \"100%\",\r\n            height: \"5%\"\r\n        },\r\n    },\r\n    boxContent: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        left: \"0px\",\r\n        bottom: \"0px\",\r\n        padding: \"10px\",\r\n        color: props =>\r\n            chroma(props.color).luminance() <= 0.116 ? \"rgba(255,255,255,0.8)\": \"rgba(0,0,0,0.6)\",\r\n        letterSpacing: \"1px\",\r\n        textTransform: \"uppercase\",\r\n        fontSize: \"12px\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    deleteIcon: {\r\n        transition: \"all 0.3s ease-in-out\"\r\n    },\r\n    colorText: {\r\n        transition: \"all 0.3s ease-in-out\"\r\n    }\r\n};\r\nexport default styles;","import React from 'react';\r\nimport { SortableElement } from \"react-sortable-hoc\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport styles from \"./styles/DraggableColorBoxStyles\";\r\n\r\n\r\nconst DraggableColorbox = SortableElement((props) => {\r\n    const { classes, name, color, handleClick } = props;\r\n    return(\r\n        <div className={classes.root}\r\n             style={{backgroundColor: color}}\r\n        >\r\n            <div className={classes.boxContent}>\r\n                <span className={classes.colorText}>{name}</span>\r\n                <DeleteOutlinedIcon className={classes.deleteIcon} onClick={handleClick}/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withStyles(styles)(DraggableColorbox);","import React from \"react\";\r\nimport {SortableContainer} from \"react-sortable-hoc\";\r\nimport DraggableColorbox from \"./DraggableColorbox\";\r\n\r\nfunction DraggableColorList({ colors, removeColor }) {\r\n    return(\r\n        <div style={{height: \"100%\"}}>\r\n            {colors.map((color, i) => (\r\n                <DraggableColorbox index={i} key={color.name} color={color.color} name={color.name} handleClick={() => removeColor(color.name)}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SortableContainer(DraggableColorList);","import {DRAWER_WIDTH} from \"../constants\";\r\n\r\nconst drawerWidth = DRAWER_WIDTH;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        height: \"100vh\"\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: \"100%\",\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        height: 'calc(100vh - 64px)',\r\n        padding: 0,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    container: {\r\n        width: \"90%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    buttons: {\r\n        width: \"100%\"\r\n    },\r\n    button: {\r\n        width: \"50%\"\r\n    }\r\n});\r\n\r\nexport default styles;","import React, { useState } from 'react';\r\nimport PaletteFormNav from './PaletteFormNav';\r\nimport ColorPickerForm from './ColorPickerForm';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Button from '@material-ui/core/Button';\r\nimport DraggableColorList from './DraggableColorList';\r\nimport arrayMove from 'array-move';\r\nimport styles from './styles/NewPaletteFormStyles';\r\nimport seedColors from \"./seedColors\";\r\n\r\nNewPaletteForm.defaultProps = {\r\n    maxColors: 20\r\n};\r\n\r\nfunction NewPaletteForm(props) {\r\n\r\n    const { classes, maxColors, palettes, savePalette, history } = props;\r\n    const [open, setOpen] = useState(true);\r\n\r\n    // Array of custom color: color-name pairs\r\n    const [selectedCustomColors, setSelectedCustomColor] = useState(seedColors[0].colors);\r\n\r\n    // For saving custom palette names\r\n    const [newPaletteName, setNewPaletteName] = useState(\"\");\r\n\r\n    const paletteIsFull = selectedCustomColors.length >= maxColors\r\n\r\n    // Change state for sliding menu drawer\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    // Change state for sliding menu drawer\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // Save palette button function\r\n    const handleSubmit = (newPalette) => {\r\n        newPalette.id = newPaletteName.toLowerCase().replace(/ /g, \"-\");\r\n        newPalette.colors = selectedCustomColors;\r\n        savePalette(newPalette);\r\n        history.push(\"/\");\r\n    };\r\n\r\n    // Remove a color from a custom color palette\r\n    const removeColor = colorName => {\r\n        setSelectedCustomColor(selectedCustomColors.filter(color => color.name !== colorName))\r\n    };\r\n\r\n    // Add a random existing color to the custom palette\r\n    const addRandomColor = () => {\r\n        const allColors = palettes.length === 0 ? seedColors.map(p => p.colors).flat() : palettes.map(p => p.colors).flat();\r\n        let rand;\r\n        let newRandColor;\r\n        let isDuplicateColor = true;\r\n        while (isDuplicateColor) {\r\n            rand = Math.floor(Math.random() * allColors.length);\r\n            newRandColor = { color: allColors[rand].color, name: allColors[rand].name };\r\n            isDuplicateColor = selectedCustomColors.some(color => color.name === newRandColor.name);\r\n        }\r\n        setSelectedCustomColor([...selectedCustomColors, newRandColor]);\r\n    };\r\n\r\n    // Rearrange color boxes after dragging one to a new position\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        setSelectedCustomColor(arrayMove(selectedCustomColors, oldIndex, newIndex))\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            {/*Top nav bar*/}\r\n            <PaletteFormNav\r\n                setOpen={setOpen}\r\n                palettes={palettes}\r\n                handleSubmit={handleSubmit}\r\n                newPaletteName={newPaletteName}\r\n                setNewPaletteName={setNewPaletteName}\r\n                handleDrawerOpen={handleDrawerOpen}\r\n            />\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <div className={classes.container}>\r\n                    <Typography variant=\"h4\" gutterBottom>Design Your Palette</Typography>\r\n                    <div className={classes.buttons}>\r\n                        <Button variant=\"contained\" className={classes.button} color=\"secondary\"\r\n                                onClick={() => setSelectedCustomColor([])}>Clear Palette</Button>\r\n                        <Button variant=\"contained\" className={classes.button} color=\"primary\" onClick={addRandomColor}\r\n                                disabled={paletteIsFull}>\r\n                            {paletteIsFull ? \"Palette Full\" : \"Random Color\"}\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {/*The Color Picker box*/}\r\n                    <ColorPickerForm\r\n                        maxColors={maxColors}\r\n                        selectedCustomColors={selectedCustomColors}\r\n                        setSelectedCustomColor={setSelectedCustomColor}\r\n                    />\r\n                </div>\r\n            </Drawer>\r\n            <main\r\n                className={classNames(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader}/>\r\n                {/* Render draggable color boxes from DraggableColorList */}\r\n                <DraggableColorList colors={selectedCustomColors} removeColor={removeColor} axis=\"xy\"\r\n                                    onSortEnd={onSortEnd} distance={10}/>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);","import React from 'react';\r\nimport \"./styles/Page.css\";\r\n\r\nfunction Page({ children }) {\r\n    return <section className=\"page\">{children}</section>\r\n}\r\n\r\nexport default Page;","import chroma from \"chroma-js\";\r\n\r\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nfunction generatePalette(starterPalette) {\r\n    let newPalette = {\r\n        paletteName: starterPalette.paletteName,\r\n        id: starterPalette.id,\r\n        emoji: starterPalette.emoji,\r\n        colors: {\r\n\r\n        }\r\n    };\r\n    for(let level of levels) {\r\n        newPalette.colors[level] = [];\r\n    }\r\n    for(let color of starterPalette.colors){\r\n        let scale = gererateScale(color.color, 10).reverse();\r\n        for(let i in scale){\r\n            newPalette.colors[levels[i]].push({\r\n                name: `${color.name} ${levels[i]}`,\r\n                id: color.name.toLowerCase().replace(/ /g, \"-\"),\r\n                hex: scale[i],\r\n                rgb: chroma(scale[i]).css(),\r\n                rgba: chroma(scale[i]).css().replace(\"rgb\", \"rgba\").replace(\")\", \",1.0)\")\r\n            })\r\n        }\r\n    }\r\n    return newPalette;\r\n}\r\n\r\nfunction getRange(hexColor){\r\n    const end = \"#fff\";\r\n    return [\r\n        chroma(hexColor).darken(1.4).hex(),\r\n        hexColor,\r\n        end\r\n    ];\r\n}\r\n\r\nfunction gererateScale(hexColor, numberOfColors){\r\n    return chroma\r\n        .scale(getRange(hexColor))\r\n        .mode(\"lab\")\r\n        .colors(numberOfColors)\r\n}\r\n\r\nexport {generatePalette}","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport Palette from './Palette';\nimport PaletteList from \"./PaletteList\";\nimport SingleColorPalette from \"./SingleColorPalette\";\nimport seedColors from './seedColors';\nimport NewPaletteForm from \"./NewPaletteForm\";\nimport Page from \"./Page\";\nimport { generatePalette } from './colorHelpers';\n\nfunction App() {\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"))\n    const [palettes, setPalettes] = useState(savedPalettes || seedColors)\n\n    useEffect(() => {\n        // Save palettes to local storage when palettes updates\n        window.localStorage.setItem(\"palettes\", JSON.stringify(palettes));\n    }, [palettes])\n\n    const findPalette = (id) => {\n        return palettes.find(function (palette) {\n            return palette.id === id;\n        })\n    }\n\n    const deletePalette = (id) => {\n        setPalettes(palettes.filter(palette => palette.id !== id))\n    }\n\n    const savePalette = (newPalette) => {\n        setPalettes([...palettes, newPalette])\n    }\n\n    return (\n        <Route render={({location}) => (\n            <TransitionGroup>\n                <CSSTransition timeout={300} classNames='page' key={location.key}>\n                    <Switch location={location}>\n                        {/*keep new palette route before ID route to prevent errors*/}\n                        <Route path=\"/palette/new\" render={(routeProps) => (\n                            <Page>\n                            <NewPaletteForm\n                            savePalette={savePalette}\n                            palettes={palettes}\n                            {...routeProps}\n                            />\n                            </Page>\n                        )}\n                        />\n                        <Route\n                            exact\n                            path=\"/palette/:paletteId/:colorId\"\n                            render={routeProps => (\n                                <Page>\n                                <SingleColorPalette\n                                    colorId={routeProps.match.params.colorId}\n                                    palette={generatePalette(\n                                        findPalette(routeProps.match.params.paletteId))}\n                                />\n                                </Page>\n                            )}\n                        />\n                        <Route\n                            exact\n                            path=\"/\"\n                            render={(routeProps) => (\n                                <Page>\n                                <PaletteList palettes={palettes} deletePalette={deletePalette} {...routeProps} />\n                                </Page>\n                                )}\n                        />\n                        <Route exact\n                               path=\"/palette/:id\"\n                               render={routeProps => (\n                                   <Page>\n                                   <Palette palette={generatePalette(findPalette(routeProps.match.params.id))}\n                                   />\n                                   </Page>\n                               )}\n                        />\n                        <Route\n                            render={(routeProps) => (\n                                <Page>\n                                    <PaletteList palettes={palettes} deletePalette={deletePalette} {...routeProps} />\n                                </Page>\n                            )}\n                        />\n                    </Switch>\n                </CSSTransition>\n            </TransitionGroup>\n        )} />\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}